var Ee=({Type:o}={Type:"HTML"})=>{const[n,{Form:S,Field:F}]=Z(),a=crypto.randomUUID();A(I(r.Editors[0],t=>{ee(n,"Content",t.get(a)?.Content??"",{shouldFocus:!1,shouldTouched:!1}),U(n)},{defer:!1}));const i=Ce(z(o));A(I(T.Messages[0],t=>t?.get("Type")&&i[1](t?.get("Type")),{defer:!1}));let E,e;return r.Editors[0]().set(a,{Type:o,Hidden:r.Editors[0]().size>0,Content:i[0]()}),te(()=>{E instanceof HTMLElement&&(e=N.create(E,{value:i[0](),language:o.toLowerCase(),automaticLayout:!0,lineNumbers:"off","semanticHighlighting.enabled":"configuredByTheme",autoClosingBrackets:"always",autoIndent:"full",tabSize:4,detectIndentation:!1,useTabStops:!0,minimap:{enabled:!1},scrollbar:{useShadows:!0,horizontal:"hidden",verticalScrollbarSize:10,verticalSliderSize:4,alwaysConsumeMouseWheel:!1},folding:!1,theme:window.matchMedia("(prefers-color-scheme: dark)").matches?"Dark":"Light",wrappingStrategy:"advanced",wordWrap:"on",bracketPairColorization:{enabled:!0,independentColorPoolPerBracketType:!0},padding:{top:12,bottom:12},fixedOverflowWidgets:!0,tabCompletion:"on",acceptSuggestionOnEnter:"on",cursorWidth:5,roundedSelection:!0,matchBrackets:"always",autoSurround:"languageDefined",screenReaderAnnounceInlineSuggestion:!1,renderFinalNewline:"on",selectOnLineNumbers:!1,formatOnType:!0,formatOnPaste:!0,fontFamily:"'Source Code Pro'",fontWeight:"400",fontLigatures:!0,links:!1,fontSize:16}),e.getModel()?.setEOL(N.EndOfLineSequence.LF),e.onKeyDown(t=>{t.ctrlKey&&t.code==="KeyS"&&(t.preventDefault(),U(n),n.element?.submit())}),e.getModel()?.onDidChangeContent(()=>{r.Editors[1](P(r.Editors[0](),new Map([[a,{Content:e.getModel()?.getValue()??"",Hidden:r.Editors[0]()?.get(a)?.Hidden??!0,Type:o}]])))}),e.onDidChangeModelLanguageConfiguration(()=>e.getAction("editor.action.formatDocument")?.run()),e.onDidLayoutChange(()=>e.getAction("editor.action.formatDocument")?.run()),window.addEventListener("load",()=>e.getAction("editor.action.formatDocument")?.run()),setTimeout(()=>e.getAction("editor.action.formatDocument")?.run(),1e3),A(I(i[0],t=>e.getModel()?.setValue(t),{defer:!1})),T.Socket[0]()?.send(JSON.stringify({Key:C.Items[0]()?.get("Key")?.[0](),Identifier:C.Items[0]()?.get("Identifier")?.[0](),From:"Content",View:o})))}),<div class={!r.Editors[0]()?.get(a)?.Hidden&&$.Data[0]()?.get("Name")?"":"hidden"}><p>Edit your <Se each={Array.from(r.Editors[0]().entries())}>{(t,s)=><><J Action={()=>{r.Editors[0]().forEach((H,O)=>{H.Hidden=t[0]!==O,r.Editors[1](P(r.Editors[0](),new Map([[O,H]])))}),setTimeout(()=>{e.setScrollPosition({scrollTop:-50})},1e3)}}>{t[1].Type}</J>{s()===r.Editors[0]().size-1?"":" / "}</>}</Se> here:</p><br/><S method="post"onSubmit={R}><F name="Content"validate={[_(`Please enter some ${o}.`)]}>{(t,s)=><div class="w-full"><div class="Editor">{o==="HTML"?<p class="Help">{"Available variables are:\xA0\xA0"}<D>{}<kbd onClick={L}><span>{"{"}</span>Cover<span>{"}"}</span></kbd></D>{",\xA0"}<D>{}<kbd onClick={L}><span>{"{"}</span>Artist<span>{"}"}</span></kbd></D>{"\xA0and\xA0"}<D>{}<kbd onClick={L}><span>{"{"}</span>Song<span>{"}"}</span></kbd></D>.</p>:""}<code ref={E}class="Monaco"/>{t.error&&<>{}<div class="Error"onClick={()=>{Y(n,"Content"),e.focus()}}><span>{"\xA0\xA0\xA0"}{t.error}</span></div></>}<input{...s}value={r.Editors[0]()?.get(a)?.Content??""}type="hidden"required={!0}/></div></div>}</F><F name="Field">{(t,s)=><input type="hidden"{...s}value={o}/>}</F><div class="Action grid grid-flow-col items-center justify-items-center gap-x-2"><div class="grid grid-flow-col items-center justify-items-center"><M Type="submit"><picture><source media="(prefers-color-scheme: light)"srcset={`${K.src}`}/><source media="(prefers-color-scheme: dark)"srcset={`${W.src}`}/><img alt="Update"src={K.src}class="Icon pr-3"/></picture><span>Update</span></M><M Type="reset"Action={()=>{e.getModel()?.setValue(i[0]()),e.getAction("editor.action.formatDocument")?.run()}}><picture><source srcset={`${B.src}`}media="(prefers-color-scheme: light)"/><source media="(prefers-color-scheme: dark)"srcset={`${V.src}`}/><img alt="Reset"src={B.src}class="Icon"/></picture>{"\xA0\xA0\xA0"}<span>Reset</span></M><M Action={()=>{e.getModel()?.setValue(z(o)),e.getAction("editor.action.formatDocument")?.run()}}><span>Default</span></M></div></div></S></div>};const z=o=>{switch(o){case"CSS":return G;case"HTML":return Q;case"TypeScript":return X;default:return""}},R=({Content:o,Field:n},S)=>{S&&(S.preventDefault(),T.Socket[0]()?.send(JSON.stringify({Key:C.Items[0]()?.get("Key")?.[0](),Identifier:C.Items[0]()?.get("Identifier")?.[0](),To:n,Input:o})))},{default:V}=await import("@Asset/Image/DarkReset.svg"),{default:W}=await import("@Asset/Image/DarkUpdate.svg"),{default:B}=await import("@Asset/Image/LightReset.svg"),{default:K}=await import("@Asset/Image/LightUpdate.svg"),{default:r}=await import("../Context/Action/Context.js"),{default:T}=await import("../Context/Connection/Context.js"),{default:$}=await import("../Context/Session/Context.js"),{default:C}=await import("../Context/Store/Context.js"),{default:J}=await import("./Anchor.js"),{default:M}=await import("./Button.js"),{default:D,Fn:L}=await import("./Tip/Copy.js"),{default:P}=await import("@Library/Merge"),{default:Te}=await import("@Library/Wrap"),{default:G}=await import("@Option/Edit/Theme/Default/CSS"),{default:Q}=await import("@Option/Edit/Theme/Default/HTML"),{default:X}=await import("@Option/Edit/Theme/Default/TypeScript");import{clearError as Y,createForm as Z,required as _,setValue as ee,validate as U}from"@modular-forms/solid";import{editor as N}from"monaco-editor";import{onMount as te}from"solid-js";import{For as Se,createEffect as A,createSignal as Ce,on as I}from"solid-js";import"@Stylesheet/Element/Action.scss";import"@Stylesheet/Element/Editor.scss";export{r as Action,J as Anchor,M as Button,G as CSS,T as Connection,L as Copy,V as DarkReset,W as DarkUpdate,Q as HTML,B as LightReset,K as LightUpdate,P as Merge,z as Return,$ as Session,C as Store,D as Tip,X as TypeScript,R as Update,Te as Wrap,Ee as default};
